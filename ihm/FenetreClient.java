/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ihm;

import client.Client;
import client.ThreadEcoute;
import java.sql.Date;
import java.util.Calendar;
import java.util.List;
import java.util.Map;
import java.util.NavigableSet;
import java.util.Set;
import javax.swing.JTree;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import message.MessageMessageConversation;
import message.MessageTicket;
import modele.EtatMessage;
import modele.Groupe;
import modele.MessageConversation;
import modele.Ticket;
import serveur.Serveur;

/**
 *
 * @author Lucas
 */
public class FenetreClient extends javax.swing.JFrame {

    /**
     * Creates new form FenetreClient
     */
    private Client client;
    private ThreadEcoute thread;
    private Ticket ticketRecuSelect;
    private Ticket ticketCreeSelect;
    private String groupeRecuSelect;
    private String groupeCreeSelect;
    private DefaultTableModel tableModele;
    public FenetreClient(Client client, ThreadEcoute thread) {
        this.client = client;
        this.thread = thread;
        initComponents();        
    }
    //DEBUG
    public FenetreClient(){
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        discussionArea = new javax.swing.JTextArea();
        creerTicketButton = new javax.swing.JButton();
        decoButton = new javax.swing.JButton();
        ongletsDiscu = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        ticketsCreesTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        ticketsRecusTree = new javax.swing.JTree();
        jScrollPane3 = new javax.swing.JScrollPane();
        saisieDiscuArea = new javax.swing.JTextArea();
        envoyerButton = new javax.swing.JButton();
        titreDiscuLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        discussionTable = new javax.swing.JTable();

        discussionArea.setColumns(20);
        discussionArea.setRows(5);
        discussionArea.setText("Peut etre generer un text area pour chaque message");
        jScrollPane4.setViewportView(discussionArea);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        creerTicketButton.setText("Créer nouveau ticket");
        creerTicketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerTicketButtonActionPerformed(evt);
            }
        });
        getContentPane().add(creerTicketButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        decoButton.setText("Déconnexion");
        decoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decoButtonActionPerformed(evt);
            }
        });
        getContentPane().add(decoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, -1, -1));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("JTree");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("administration");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("blue");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("violet");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("red");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("yellow");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("groupe 3.1");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("basketball");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("soccer");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("football");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("hockey");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("food");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("hot dogs");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("pizza");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("ravioli");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("bananas");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        ticketsCreesTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        //ticketsCreesTree.setModel(new javax.swing.tree.DefaultTreeModel(getArbreModelCrees()));
        ticketsCreesTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                ticketsCreesTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ticketsCreesTree);

        ongletsDiscu.addTab("Créés", jScrollPane1);

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("JTree");
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("groupe 1.1");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Problème chauffage");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Annulation de cours");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("red");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("yellow");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("groupe 4.2");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("basketball");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("soccer");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("football");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("hockey");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("food");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("hot dogs");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("pizza");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("ravioli");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("bananas");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        ticketsRecusTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        //ticketsRecusTree.setModel(new javax.swing.tree.DefaultTreeModel(getArbreModelRecus()));
        ticketsRecusTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                ticketsRecusTreeValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ticketsRecusTree);

        ongletsDiscu.addTab("Reçus", jScrollPane2);

        getContentPane().add(ongletsDiscu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 190, 322));

        saisieDiscuArea.setColumns(20);
        saisieDiscuArea.setRows(5);
        saisieDiscuArea.setToolTipText("écire un message...");
        jScrollPane3.setViewportView(saisieDiscuArea);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, 290, 40));

        envoyerButton.setText("Envoyer");
        envoyerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envoyerButtonActionPerformed(evt);
            }
        });
        getContentPane().add(envoyerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 350, -1, -1));

        titreDiscuLabel.setText("Discussion");
        getContentPane().add(titreDiscuLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));

        usernameLabel.setText("Prénom Nom");
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, 20));

        jScrollPane5.setBorder(null);

        discussionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"util1", "message1", null, null},
                {"util2", "message2", null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        //Gestion selection de ligne
        discussionTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (discussionTable.getSelectedRow() > -1) {
                    // print first column value from selected row
                    System.out.println(discussionTable.getValueAt(discussionTable.getSelectedRow(), 0).toString());
                }
            }
        });
        //Mise en place du modele
        tableModele = new DefaultTableModel();
        setTableModel();
        jScrollPane5.setViewportView(discussionTable);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 480, 230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void envoyerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envoyerButtonActionPerformed
        //Envoyer le message
        Date date = new java.sql.Date(Calendar.getInstance().getTimeInMillis());
        titreDiscuLabel.setText(date.toString());        
        MessageConversation messConv = new MessageConversation(-1, client.getUtilisateurClient(), saisieDiscuArea.getText(), date, EtatMessage.NON_RECU_PAR_LE_SERVEUR, true);
        //Recuperer ticket selectionné dans l'arbre
        //onglet 0 = crees, onglet 1 = recus
        int onglet = ongletsDiscu.getSelectedIndex();
        if(onglet == 0){
            ticketCreeSelect.ajouterMessage(messConv);
            MessageMessageConversation messTicket = new MessageMessageConversation(ticketCreeSelect.getIdTicket(), messConv);
            client.getReseaux().envoyerMessage(messTicket);  
        }
        if(onglet == 1){
            ticketRecuSelect.ajouterMessage(messConv);
            MessageMessageConversation messEnvoye = new MessageMessageConversation(ticketRecuSelect.getIdTicket(), messConv);
            client.getReseaux().envoyerMessage(messEnvoye);            
        }        
        //On efface le texte de la saisie
        saisieDiscuArea.setText("");
    }//GEN-LAST:event_envoyerButtonActionPerformed
    
    private void ticketsCreesTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_ticketsCreesTreeValueChanged
        Ticket node1 = (Ticket) evt.getPath().getLastPathComponent();
        String node2 = evt.getNewLeadSelectionPath().getParentPath().getLastPathComponent().toString();
        ticketCreeSelect = node1;
        groupeCreeSelect = node2;
        titreDiscuLabel.setText(ticketCreeSelect.toString());
        //Afficher la discussion correspondante
        NavigableSet<MessageConversation> ensembleMessage = ticketCreeSelect.getFilDiscussion().getEnsembleMessage();
        for(MessageConversation mess : ensembleMessage){
            String[] ligne = null;
            ligne[0] = mess.getCreateur().toString();
            ligne[1] = mess.getTexte();
            ligne[2] = mess.getDate().toString();            
            tableModele.addRow(ligne);
        }
        discussionTable.setModel(tableModele);
         
    }//GEN-LAST:event_ticketsCreesTreeValueChanged

    private void creerTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerTicketButtonActionPerformed
        //Affichage d'une fenetre de creation de ticket
        FenetreClientNouvTicket fenNewTicket = new FenetreClientNouvTicket(client);
        //DEBUG
        //FenetreClientNouvTicket fenNewTicket = new FenetreClientNouvTicket();
        fenNewTicket.setVisible(true);
    }//GEN-LAST:event_creerTicketButtonActionPerformed

    private void decoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decoButtonActionPerformed
        thread.stopper(thread);
        client.getReseaux().deconnexionServeur(client.getUtilisateurClient().getIdUtilisateur());
        FenetreClientConnexion fenetre = new FenetreClientConnexion();
        fenetre.setVisible(true);
        this.dispose();
        

    }//GEN-LAST:event_decoButtonActionPerformed

    private void ticketsRecusTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_ticketsRecusTreeValueChanged
        Ticket node1 = (Ticket) evt.getPath().getLastPathComponent();
        String node2 = evt.getNewLeadSelectionPath().getParentPath().getLastPathComponent().toString();
        ticketRecuSelect = node1;
        groupeRecuSelect = node2;
        titreDiscuLabel.setText(ticketRecuSelect.toString());
        //TODO : afficher la discussion correspondante
        
        //afficherMessages(node)
    }//GEN-LAST:event_ticketsRecusTreeValueChanged
    private DefaultMutableTreeNode getArbreModelRecus(){
        //PARTIE TICKETS RECUS
        Map<Groupe, List<Ticket>> ticketsRecu = client.getTicketsRecu();
        //Racine
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(new Ticket(0, "Tickets reçus", null, null, null));
        DefaultMutableTreeNode[] treeNode = null;
        int index = 0;
        //Création des noeuds des groupes
        Set<Groupe> groupes = ticketsRecu.keySet();
        for(Groupe gr : groupes){
            treeNode[index] = new DefaultMutableTreeNode(new Ticket(0, gr.getIdGroupe(), null, null, null));
            List<Ticket> tickets = ticketsRecu.get(gr);
            //Création des noeuds des tickets pour chaque groupe
            for(Ticket tk : tickets){
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(tk);
                treeNode[index].add(node);
            }
            index ++;
        }
        //On relie chaque noeud de groupe a la racine
        for(int i = 0; i < index ; i++){
            root.add(treeNode[i]);
        }        
        return root;
    }
    
    private DefaultMutableTreeNode getArbreModelCrees(){
        //PARTIE TICKETS CREES
        Map<Groupe, List<Ticket>> ticketsCree = client.getTicketsCree();
        //Racine
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(new Ticket(0, "Tickets crées", null, null, null));
        DefaultMutableTreeNode[] treeNode = null;
        int index = 0;
        //Création des noeuds des groupes
        Set<Groupe> groupes = ticketsCree.keySet();
        for(Groupe gr : groupes){
            treeNode[index] = new DefaultMutableTreeNode(new Ticket(0, gr.getIdGroupe(), null, null, null));
            List<Ticket> tickets = ticketsCree.get(gr);
            //Création des noeuds des tickets pour chaque groupe
            for(Ticket tk : tickets){
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(tk);
                treeNode[index].add(node);
            }
            index ++;
        }
        //On relie chaque noeud de groupe a la racine
        for(int i = 0; i < index ; i++){
            root.add(treeNode[i]);
        }        
        return root;
    }
    
    private void setTableModel(){
        //Création de colonnes
        //tableModele.addColumn("Image");
        tableModele.addColumn("Nom utilisateur");
        tableModele.addColumn("Message");
        tableModele.addColumn("Date");
        //Remplissage des lignes par des messages
        //if utilisateur alors mettre a droite
        String[] test = {
                "Title 1", "Title 2", "Title 3", "Title 4"
            };
        tableModele.addRow(test);
        discussionTable.setModel(tableModele);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetreClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetreClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetreClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetreClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetreClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton creerTicketButton;
    private javax.swing.JButton decoButton;
    private javax.swing.JTextArea discussionArea;
    private javax.swing.JTable discussionTable;
    private javax.swing.JButton envoyerButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane ongletsDiscu;
    private javax.swing.JTextArea saisieDiscuArea;
    private javax.swing.JTree ticketsCreesTree;
    private javax.swing.JTree ticketsRecusTree;
    private javax.swing.JLabel titreDiscuLabel;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
