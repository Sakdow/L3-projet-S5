/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ihm;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;

import modele.Groupe;
import modele.Utilisateur;
import serveur.Serveur;

/**
 *
 * @author Lucas
 */
public class FenetreServeurCreerGr extends javax.swing.JFrame {
	private DefaultListModel listeModele;
	private DefaultComboBoxModel comboUtilModele;
	private DefaultComboBoxModel comboGrModele;
	private List<Utilisateur> listeUtil;
	private Serveur serveur;

	/**
	 * Creates new form FenetreServeurCreerGr
	 */
	public FenetreServeurCreerGr(Serveur serveur) {
		this.serveur = serveur;
		ImageIcon img = new ImageIcon("icon.jpg");
		this.setIconImage(img.getImage());
		listeUtil = new ArrayList<>();
		initComponents();
		WindowListener exitListener = new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				int confirm = JOptionPane.showOptionDialog(null, "Voulez-vous vraiment annuler (ne pas sauver) ?",
						"Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
				if (confirm == 0) {
					setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				} else {
					setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
				}
			}
		};
		this.addWindowListener(exitListener);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		nomGrLabel = new javax.swing.JLabel();
		nomGrField = new javax.swing.JTextField();
		ajouterUtilLabel = new javax.swing.JLabel();
		searchUtilField = new javax.swing.JTextField();
		ajouterGroupeLabel = new javax.swing.JLabel();
		searchAjoutGrField = new javax.swing.JTextField();
		paramGrLabel = new javax.swing.JLabel();
		listeUtilGrLabel = new javax.swing.JLabel();
		supprUtilLabel = new javax.swing.JLabel();
		searchSupprUtilField = new javax.swing.JTextField();
		supprimerUtilButton = new javax.swing.JButton();
		creerButton = new javax.swing.JButton();
		annulerButton = new javax.swing.JButton();
		ajoutUtilCombo = new javax.swing.JComboBox<>();
		searchSupprUtilLabel = new javax.swing.JLabel();
		ajouterUtilButton = new javax.swing.JButton();
		ajoutGrCombo = new javax.swing.JComboBox<>();
		ajouterGrButton = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		listeUtilList = new javax.swing.JList<>();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Création de groupe");
		setMinimumSize(new java.awt.Dimension(800, 600));
		getContentPane().setLayout(new java.awt.GridBagLayout());

		nomGrLabel.setText("Nom du groupe :");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(76, 40, 0, 0);
		getContentPane().add(nomGrLabel, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 114;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(76, 12, 0, 0);
		getContentPane().add(nomGrField, gridBagConstraints);

		ajouterUtilLabel.setText("Ajouter un utilisateur :");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(30, 20, 0, 0);
		getContentPane().add(ajouterUtilLabel, gridBagConstraints);

		searchUtilField.setToolTipText("Recherche");
		searchUtilField.setName(""); // NOI18N
		searchUtilField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				searchUtilFieldKeyReleased(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 114;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(30, 12, 0, 0);
		getContentPane().add(searchUtilField, gridBagConstraints);

		ajouterGroupeLabel.setText("Ajouter un groupe : ");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(16, 20, 0, 0);
		getContentPane().add(ajouterGroupeLabel, gridBagConstraints);

		searchAjoutGrField.setToolTipText("Recherche");
		searchAjoutGrField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				searchAjoutGrFieldKeyReleased(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.gridheight = 3;
		gridBagConstraints.ipadx = 114;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(16, 12, 0, 0);
		getContentPane().add(searchAjoutGrField, gridBagConstraints);

		paramGrLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		paramGrLabel.setText("Paramètres du groupe");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(30, 2, 0, 0);
		getContentPane().add(paramGrLabel, gridBagConstraints);

		listeUtilGrLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		listeUtilGrLabel.setText("Liste des utilisateurs du groupe");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 9;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(30, 131, 0, 0);
		getContentPane().add(listeUtilGrLabel, gridBagConstraints);

		supprUtilLabel.setText("Supprimer un utilisateur :");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 8;
		gridBagConstraints.gridwidth = 5;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(20, 141, 0, 0);
		getContentPane().add(supprUtilLabel, gridBagConstraints);

		searchSupprUtilField.setToolTipText("Recherche");
		searchSupprUtilField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				searchSupprUtilFieldKeyReleased(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 10;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.gridheight = 5;
		gridBagConstraints.ipadx = 104;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(6, 121, 0, 0);
		getContentPane().add(searchSupprUtilField, gridBagConstraints);

		supprimerUtilButton.setText("Supprimer");
		supprimerUtilButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				supprimerUtilButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 10;
		gridBagConstraints.gridwidth = 10;
		gridBagConstraints.gridheight = 6;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
		getContentPane().add(supprimerUtilButton, gridBagConstraints);

		creerButton.setText("Créer");
		this.getRootPane().setDefaultButton(creerButton);
		creerButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				creerButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 7;
		gridBagConstraints.gridy = 22;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(63, 4, 11, 0);
		getContentPane().add(creerButton, gridBagConstraints);

		annulerButton.setText("Annuler");
		annulerButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				annulerButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 22;
		gridBagConstraints.gridwidth = 10;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(63, 18, 11, 0);
		getContentPane().add(annulerButton, gridBagConstraints);

		ajoutUtilCombo.setModel(
				new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
		comboUtilModele = new DefaultComboBoxModel();
		setComboUtilModel();
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.ipadx = 64;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(7, 12, 0, 0);
		getContentPane().add(ajoutUtilCombo, gridBagConstraints);

		searchSupprUtilLabel.setText("Recherche");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(6, 121, 0, 0);
		getContentPane().add(searchSupprUtilLabel, gridBagConstraints);

		ajouterUtilButton.setText("Ajouter");
		ajouterUtilButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ajouterUtilButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridheight = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(30, 3, 0, 0);
		getContentPane().add(ajouterUtilButton, gridBagConstraints);

		ajoutGrCombo.setModel(
				new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
		comboGrModele = new DefaultComboBoxModel();
		setComboGrModel();
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 15;
		gridBagConstraints.gridheight = 7;
		gridBagConstraints.ipadx = 64;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
		getContentPane().add(ajoutGrCombo, gridBagConstraints);

		ajouterGrButton.setText("Ajouter");
		ajouterGrButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ajouterGrButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.gridheight = 4;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(16, 3, 0, 0);
		getContentPane().add(ajouterGrButton, gridBagConstraints);

		listeModele = new DefaultListModel();
		listeUtilList.setModel(listeModele);
		jScrollPane1.setViewportView(listeUtilList);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 15;
		gridBagConstraints.gridheight = 7;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.ipadx = 176;
		gridBagConstraints.ipady = 154;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(16, 141, 0, 0);
		getContentPane().add(jScrollPane1, gridBagConstraints);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void annulerButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_annulerButtonActionPerformed
		int confirm = JOptionPane.showOptionDialog(null, "Voulez-vous vraiment annuler (ne pas sauver) ?",
				"Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
		if (confirm == 0) {
			this.dispose();
		} else {
			setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
		}

	}// GEN-LAST:event_annulerButtonActionPerformed

	private void ajouterUtilButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ajouterUtilButtonActionPerformed

		if (!listeModele.contains(ajoutUtilCombo.getSelectedItem())) {
			listeModele.addElement(ajoutUtilCombo.getSelectedItem());
			listeUtil.add((Utilisateur) ajoutUtilCombo.getSelectedItem());
			listeUtilList.setModel(listeModele);
		}

	}// GEN-LAST:event_ajouterUtilButtonActionPerformed

	private void searchUtilFieldKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_searchUtilFieldKeyReleased
		String text = searchUtilField.getText();
		searchCombo(text, ajoutUtilCombo);
	}// GEN-LAST:event_searchUtilFieldKeyReleased

	private void searchAjoutGrFieldKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_searchAjoutGrFieldKeyReleased
		String text = searchAjoutGrField.getText();
		searchCombo(text, ajoutGrCombo);
	}// GEN-LAST:event_searchAjoutGrFieldKeyReleased

	private void searchSupprUtilFieldKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_searchSupprUtilFieldKeyReleased
		String text = searchSupprUtilField.getText();
		searchJList(text, listeUtilList, searchSupprUtilLabel);
	}// GEN-LAST:event_searchSupprUtilFieldKeyReleased

	private void ajouterGrButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ajouterGrButtonActionPerformed
		// Faire une requete pour recuperer les utilisateurs du groupe
		String nomGr = (String) ajoutGrCombo.getSelectedItem();
		Groupe gr = null;
		try {
			gr = serveur.getGroupeFromNomGroupe(nomGr);
		} catch (SQLException ex) {
			Logger.getLogger(FenetreServeurCreerGr.class.getName()).log(Level.SEVERE, null, ex);
		}
		if (gr != null) {
			List<Utilisateur> utils = gr.getListeUtilisateur();
			// Ajout de chaque utilisateur à la JList
			for (Utilisateur ut : utils) {
				// Verif de doublons
				if (!listeModele.contains(ut)) {
					listeModele.addElement(ut);
					listeUtil.add(ut);
				}
			}
			// On met à jour la liste avec son modele
			listeUtilList.setModel(listeModele);
		}

	}// GEN-LAST:event_ajouterGrButtonActionPerformed

	private void supprimerUtilButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_supprimerUtilButtonActionPerformed
		int index = listeUtilList.getSelectedIndex();
		listeModele.remove(index);
		listeUtilList.setModel(listeModele);
	}// GEN-LAST:event_supprimerUtilButtonActionPerformed

	private void creerButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_creerButtonActionPerformed
		if (!nomGrField.getText().equals("") && listeUtil != null) {
			serveur.creerGroupe(nomGrField.getText(), listeUtil);
			this.dispose();
		}

	}// GEN-LAST:event_creerButtonActionPerformed

	public void searchJList(String text, JList liste, JLabel label) {

		// Get number of items in the list
		int size = liste.getModel().getSize();
		text = text.toUpperCase();
		// Get all item objects
		for (int i = 0; i < size; i++) {
			String item = liste.getModel().getElementAt(i).toString();
			if (item.contains(text)) {
				int index = i;
				liste.setSelectedIndex(index);
				label.setText(text + " trouvé à l'index " + index);
				// Une fois trouvé, on arrête la boucle
				i = size + 1;
			} else {
				liste.clearSelection();
				label.setText(text + " non trouvé");
			}
		}
	}

	public void searchCombo(String text, JComboBox box) {

		// Get number of items in the list
		int size = box.getModel().getSize();
		text = text.toUpperCase();
		// Get all item objects
		for (int i = 0; i < size; i++) {
			String item = box.getModel().getElementAt(i).toString();
			if (item.contains(text)) {
				int index = i;
				box.setSelectedIndex(index);
				// Une fois trouvé, on arrête la boucle
				i = size + 1;
			}
		}
	}

	private void setComboGrModel() {
		if (serveur != null) {
			Set<String> groupes = serveur.getGroupes();
			for (String gr : groupes) {
				comboGrModele.addElement(gr);
			}
			ajoutGrCombo.setModel(comboGrModele);
		}
	}

	private void setComboUtilModel() {

		if (serveur != null) {
			Set<Utilisateur> utils = serveur.getUtilisateurs();
			for (Utilisateur ut : utils) {
				comboUtilModele.addElement(ut);
			}
			ajoutUtilCombo.setModel(comboUtilModele);
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JComboBox<String> ajoutGrCombo;
	private javax.swing.JComboBox<String> ajoutUtilCombo;
	private javax.swing.JButton ajouterGrButton;
	private javax.swing.JLabel ajouterGroupeLabel;
	private javax.swing.JButton ajouterUtilButton;
	private javax.swing.JLabel ajouterUtilLabel;
	private javax.swing.JButton annulerButton;
	private javax.swing.JButton creerButton;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel listeUtilGrLabel;
	private javax.swing.JList<String> listeUtilList;
	private javax.swing.JTextField nomGrField;
	private javax.swing.JLabel nomGrLabel;
	private javax.swing.JLabel paramGrLabel;
	private javax.swing.JTextField searchAjoutGrField;
	private javax.swing.JTextField searchSupprUtilField;
	private javax.swing.JLabel searchSupprUtilLabel;
	private javax.swing.JTextField searchUtilField;
	private javax.swing.JLabel supprUtilLabel;
	private javax.swing.JButton supprimerUtilButton;
	// End of variables declaration//GEN-END:variables
}
